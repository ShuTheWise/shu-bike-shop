@page "/basket"

@using DataAccessLibrary
@using DataAccessLibrary.Models

@inject IJSRuntime jSRuntime
@inject IBasketService basketService
@inject IOrderData orderData
@inject IUserService userService
@inject IProductData productData

@if (basketItems == null)
{
    <p><em>Loading...</em></p>
}
else if (!basketItems.Any())
{
    <p><em>There is nothing in the basket</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var basketItem in basketItems)
            {
                <tr>
                    <td>@basketItem.Product.Name</td>
                    <td>@basketItem.Quantity</td>
                    <td>@basketItem.Price</td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        Total amount: @TotalAmount
    </div>
    <button class="btn btn-primary" @onclick="PlaceOrder">Place order</button>
}

@code {
    private decimal TotalAmount;
    private List<BasketItemModel> basketItems;

    protected override async Task OnInitializedAsync()
    {
        basketItems = await basketService.GetBasketItems();
        RefreshTotalAmount();
    }

    private async Task PlaceOrder()
    {
        var user = await userService.CurrentUser;

        var orderModel = await orderData.AddOrder(new NewOrderModel()
        {
            UserEmail = user.Email,
            TotalAmount = TotalAmount,
            Items = basketItems.Select(x => new OrderProductModel
            {
                ProductId = x.Product.Id,
                UnitPrice = x.Product.Price,
                Amount = x.Quantity
            }).ToList()
        });

        foreach (var item in basketItems)
        {
            await productData.DecrementProductAmount(item.Product.Id, item.Quantity);
        }

        await basketService.ClearBasket();
        basketItems = new List<BasketItemModel>();

        await jSRuntime.Confirm($"Your order is placed, your Order number is {orderModel.Id}");
    }

    private void RefreshTotalAmount()
    {
        TotalAmount = 0;
        foreach (var item in basketItems)
        {
            TotalAmount += item.Price;
        }
    }
}
