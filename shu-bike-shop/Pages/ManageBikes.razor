@page "/managebikes"

@using DataAccessLibrary
@using DataAccessLibrary.Models

@inject IBikesData bikesData
@inject IBasketService basket
@inject IJSRuntime jSRuntime
@inject NavigationManager navigationManager

<AuthorizeView>
    <Authorized>
        @if (context.User.IsInRole(UserService.ADMINISTRATION_ROLE))
        {
            @if (bikes == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Make</th>
                            <th>Stock</th>
                            <th>Year</th>
                            <th>Price</th>
                            <th>Stock</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var bike in bikes)
                        {
                        <tr>
                            <td>
                                <input class="form-group mx-sm-1 mb-1" type="text" @bind="@bike.Make" />
                            </td>
                            <td>
                                <input class="form-group" type="text" @bind="@bike.Model" />
                            </td>
                            <td>
                                <input class="form-group" type="number" @bind="@bike.Year" />
                            </td>
                            <td>
                                <input class="form-group mx-sm-1 mb-1" type="number" @bind="@bike.Price" />
                            </td>
                            <td>
                                <input class="form-group mx-sm-1 mb-1" type="number" @bind="@bike.Amount" />
                            </td>
                            <td>
                                <button class="btn btn-primary" @onclick="()=>UpdateBike(bike)">
                                    <span class="oi oi-check"></span> Apply
                                </button>
                            </td>
                            <td>
                                <button class="btn btn-primary" @onclick="()=>DeleteBike(bike)">
                                    <span class="oi oi-delete"></span> Delete
                                </button>
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>
                <div>
                    <AddBikes></AddBikes>
                </div>
            }
        }
    </Authorized>
</AuthorizeView>

@code {
    private List<BikeModel> bikes;

    protected override async Task OnInitializedAsync()
    {
        bikes = await bikesData.GetBikes();
    }

    private async Task DeleteBike(ProductModel productModel)
    {
        await bikesData.RemoveBike(productModel.Id);
    }

    private async Task UpdateBike(BikeModel bikeModel)
    {
        var updateModel = new BikeUpdateModel()
        {
            Id = bikeModel.Id,
            Amount = bikeModel.Amount,
            Make = bikeModel.Make,
            Model = bikeModel.Model,
            Price = bikeModel.Price,
            Year = bikeModel.Year
        };

        await bikesData.UpdateBike(updateModel);

        navigationManager.NavigateTo("/bikes");
    }
}
