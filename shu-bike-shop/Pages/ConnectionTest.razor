@page "/connectionTest"

@using PaymentAccessService;
@inject IPaymentService paymentService
<h1>Merchant test</h1>
<div>
    Merchant: @paymentService.MerchantId
</div>
<div>
    Connection test result:
</div>
<div>
    @connectionTestResult
</div>

@if (connectionTestResult == "OK")
{
    <button class="btn btn-primary" @onclick="CreateTestPayment">Place order</button>
    @if (testPaymentPerformed)
    {
        <div>
            Test payment result:
        </div>
        <div>
            <textarea class="textarea" 
                      @bind-value="testPaymentResult"
                      @bind-value:event="oninput" />
        </div>
    }
}

@code{
    private string connectionTestResult;
    private string testPaymentResult;

    private bool testPaymentPerformed;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            testPaymentPerformed = false;
            var testConnection = await paymentService.TestConnection();
            connectionTestResult = testConnection.Result;
        }
        catch (Exception ex)
        {
            connectionTestResult = ex.ToString();
        }
    }

    protected async Task CreateTestPayment()
    {
        testPaymentPerformed = true;
        testPaymentResult = "";

        try
        {
            var paymentResponse = await paymentService.CreateTestPayment();
            testPaymentResult = paymentResponse.ToJson();
        }
        catch (Exception ex)
        {
            testPaymentResult = ex.ToString();
        }
    }
}

