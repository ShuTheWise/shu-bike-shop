@page "/orders"

@using PaymentAccessService
@using DataAccessLibrary
@using DataAccessLibrary.Models

@inject IOrderData orderData
@inject IPaymentService paymentService
@inject ITransactionsData transactionData
@inject IJSRuntime jSRuntime
@inject ISecurityService securityService
@inject NavigationManager navigationManager

<AuthorizeView Roles="Users">
    <Authorized>
        @if (orders == null)
        {
            <Loading></Loading>
        }
        else if (!orders.Any())
        {
            <p><em>No orders</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Number</th>
                        <th>Status</th>
                        <th>Paid</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in orders)
                    {
                        <tr>
                            <td>@order.Id</td>
                            <td>@order.OrderStatus</td>
                            <td>@order.PaymentStatus</td>
                            <td>@order.TotalAmount</td>
                            <td>
                                <button class="btn btn-dark" @onclick="()=> GoToOrder(order)">
                                    <span class="oi oi-project" aria-hidden="true"></span> Order details
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </Authorized>
</AuthorizeView>

@code
{
    private User user;
    private List<OrderModel> orders;

    protected override async Task OnInitializedAsync()
    {
        user = await securityService.GetCurrentUser();
        if (user != null)
        {
            orders = await orderData.GetOrders(user.Name);
        }
    }

    private void GoToOrder(OrderModel orderModel)
    {
        navigationManager.NavigateTo($"orders/{orderModel.Id}");
    }

    private string OrderLink(OrderModel orderModel)
    {
        return $"orders/{orderModel.Id}";
    }
}
