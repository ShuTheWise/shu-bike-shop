@page "/orders"

@using DataAccessLibrary
@using DataAccessLibrary.Models

@inject IOrderData orderData
@inject IPaymentService paymentService
@inject IJSRuntime jSRuntime

<AuthorizeView>
    <Authorized>
        @{user = @context.User.Identity.Name;}

        @if (orders == null)
        {
            <p><em>Loading...</em></p>
        }
        else if (!orders.Any())
        {
            <p><em>No orders</em></p>
        }
        else
        {

            <table class="table">
                <thead>
                    <tr>
                        <th>Number</th>
                        <th>Status</th>
                        <th>Paid</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in orders)
                    {
                        <tr>
                            <td>@order.Id</td>
                            <td>@order.OrderStatus</td>
                            <td>@order.PaymentStatus</td>
                            <td>@order.TotalAmount</td>
                            <td>
                                <button class="btn btn-primary" @onclick="() => PayForOrder(order)">
                                    <span class="oi oi-dollar"> Pay</span>
                                </button>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        }
    </Authorized>
</AuthorizeView>

@code {

    private string user;
    private List<OrderModel> orders;

    protected override async Task OnInitializedAsync()
    {
        orders = await orderData.GetOrders(user);
    }

    private async Task PayForOrder(OrderModel productModel)
    {
        var add = await jSRuntime.Confirm($"Pay for order ?");

        if (add)
        {
            try
            {
                //var res = await paymentService.c(createPaymentRequest);
            }
            catch
            {

            }
            //await basket.AddProduct(productModel, () => jSRuntime.Confirm("Item already in the basket, add again?"));
        }
    }
}
